#!/bin/sh
# git-rehost-ipfs - rehost a git repo on ipfs

USAGE="usage: $0 [--unpack] <git-repo> [<name>]"

die() {
	echo >&2 "$@"
	exit 1
}

UNPACK=
url=
name=

[ "$#" -gt 0 ] || die "Not enough arguments\n$USAGE"

while [ "$#" -gt 0 ]
do
	case $1 in
	--unpack)
		UNPACK=1
		shift
		;;
	--*)
		die "Unknown option $1\n$USAGE"
		;;
	*)
		if [ -z "$url" ]
		then
			url="$1"
			shift
		else
			if [ -z "$name" ]
			then
				name="$1"
				shift
			else
				die "Too many arguments ($1)\n$USAGE"
			fi
		fi
		;;
	esac
done

[ -n "$url" ] || die "Not enough or bad arguments\n$USAGE"
[ -n "$name" ] || name=$(basename "$url")

dir=$(mktemp -d -t git-ipfs-rehost-XXXXXX)
tohost="$dir/tohost"
repo="$dir/tohost/$name"

echo
echo "Rehosting: $url"
echo

git clone --bare "$url" "$repo" || die "Could not clone '$url'"

cd "$repo" || die "Could not cd into '$repo'"

if [ "$UNPACK" = 1 ]
then
	if ls objects/pack/*.pack >/dev/null 2>&1
	then
		echo "Unpacking..."
		mv objects/pack/*.pack . || die "Could not move packs"

		# Unfortunately some shells like dash don't perform globing
		# after "<", so "git unpack-objects < *.pack" doesn't work.
		cat *.pack | git unpack-objects || die "Could not unpack packs"

		rm -f *.pack || die "Could not remove packs"
		rm -f objects/pack/*.idx || die "Could not remove pack indexes"
	fi
else
	echo "Packing..."
	# This should pack and remove unwanted and unneeded objects
	git gc || die "Could not garbage collect"

	# Create .keep files so that the .pack will be kept
	for pack in objects/pack/*.pack
	do
		keep=$(echo "$pack" | sed -e 's/\.pack$/.keep/')
		touch "$keep"
	done
fi

echo "Updating server info..."
git update-server-info || die "Could not update-server-info"

echo "Adding to IPFS..."
ipfs add -q -r "$tohost" >"$tohost/add_$name.log" || die "Could not add '$tohost'"
hash=$(tail -n1 "$tohost/add_$name.log")

echo "done."
echo
echo "Repo rehosted at:"
echo
echo "  http://gateway.ipfs.io/ipfs/$hash/$name"
echo
echo "You can clone it with:"
echo
echo "  git clone http://gateway.ipfs.io/ipfs/$hash/$name"
echo
